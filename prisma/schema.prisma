// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Blog {
  id            String      @id @default(cuid())
  title         String
  content       Json // Storing Tiptap JSON content
  excerpt       String
  authorId      String
  author        String
  author_image  String?
  tags          String[] // Array of tags
  status        String // e.g., "published", "draft"
  featuredImage String?
  readingTime   Int
  views         Int         @default(0)
  comments      Comment[]
  likes         Like[]
  bookmarks     Bookmarks[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  publishedAt   DateTime?
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  blogId    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  blog Blog @relation(fields: [blogId], references: [id])
}

model Like {
  id        String   @id @default(cuid())
  blogId    String
  userId    String
  createdAt DateTime @default(now())

  blog Blog @relation(fields: [blogId], references: [id])

  @@unique([blogId, userId])
}

model Bookmarks {
  id        String   @id @default(cuid())
  blogId    String
  userId    String
  createdAt DateTime @default(now())

  blog Blog @relation(fields: [blogId], references: [id])

  @@unique([blogId, userId])
}
